//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace variant1.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Materials_import
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Materials_import()
        {
            this.Mateerial_suppliers_import = new HashSet<Mateerial_suppliers_import>();
        }
    
        public string Наименование_материала { get; set; }
        public string Тип_материала { get; set; }
        public Nullable<double> Цена_единицы_материала { get; set; }
        public Nullable<double> Количество_на_складе { get; set; }
        public Nullable<double> Минимальное_количество { get; set; }
        public Nullable<double> Количество_в_упаковке { get; set; }
        public string Единица_измерения { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Mateerial_suppliers_import> Mateerial_suppliers_import { get; set; }
        public virtual Material_type_import Material_type_import { get; set; }

        public double? RznKolvo
        {
            get
            {
                if (Количество_на_складе < Минимальное_количество)
                    return Минимальное_количество - Количество_на_складе;
                return 0;
            }
        }
        public double? MinObZak
        {
            get
            {
                if (RznKolvo == null || Количество_в_упаковке == null || Количество_в_упаковке <= 0)
                    return null;
                double needed = Math.Ceiling(RznKolvo.Value / Количество_в_упаковке.Value);
                return needed* Количество_в_упаковке.Value;
            }
        }
        public double? StoimZak
        {
            get
            {
                if(MinObZak == null || Цена_единицы_материала == null)
                    return null;
                return MinObZak * Цена_единицы_материала;
            }
        }
    }
}
